<?php

/**
 * @file
 * Contains register_display.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\user\Entity\Role;

/**
 * Implements hook_help().
 */
function register_display_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the register_display module.
    case 'help.page.register_display':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Different register form based on displays for each role.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_permission().
 */
function register_display_permission() {
  return [
    'administer register_display' => [
      'title' => t('Administer register display'),
      'description' => t('Configure register display module.'),
    ],
  ];
}

/**
 * Implements hook_entity_type_alter().
 */
function register_display_entity_type_alter(array &$entity_types) {
  // Get all form display modes.
  $form_modes = \Drupal::service('entity_display.repository')->getAllFormModes();
  foreach ($form_modes as $entity_type => $display_modes) {
    if ($entity_type !== 'user') {
      continue;
    }

    $user_type = $entity_types[$entity_type];
    foreach ($display_modes as $machine_name => $form_display) {
      $default_handler_class = $user_type->getHandlerClasses()['form']['default'];
      $user_type->setFormClass($machine_name, $default_handler_class);
    }
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function register_display_form_user_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Check if roleId is set.
  if ($roleId = $form_state->getValue('roleId')) {
    $form['roleId'] = ['#type' => 'value', '#value' => $roleId];
    $form['#validate'][] = '\Drupal\register_display\RegisterDisplayServices::addRoleToUser';
  }
}

/**
 * Implements hook_ENTITY_TYPE_delete().
 */
function register_display_user_role_delete(Role $entity) {
  $registerDisplayService = \Drupal::service('register_display.services');
  $registerDisplayService->deleteRegisterDisplayPage($entity->get('id'));
}
